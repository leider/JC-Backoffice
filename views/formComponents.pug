mixin text(name, label, value, tooltip, placeholder, readonly)
  .form-group
    if (readonly)
      +hidden(name, value)
    +controlLabel(name, label, tooltip)
    input.form-control.trim-text(id=name, type="text", name=name, value=value, placeholder=placeholder, disabled=readonly)

mixin textRequired(name, label, value, tooltip, placeholder, readonly)
  .form-group
    if (readonly)
      +hidden(name, value)
    +controlLabel(name, label, tooltip)
    input.form-control.trim-text(id=name, type="text", name=name, value=value, placeholder=placeholder, disabled=readonly, required)
    .invalid-feedback Pflichtfeld

mixin email(name, label, value, tooltip, placeholder, readonly)
  .form-group
    if (readonly)
      +hidden(name, value)
    +controlLabel(name, label, tooltip)
    input.form-control.trim-text(id=name, type="email", name=name, value=value, placeholder=placeholder, disabled=readonly)

mixin number(name, label, value, tooltip, min, max, readonly)
  .form-group
    if (readonly)
      +hidden(name, value)
    +controlLabel(name, label, tooltip)
    input.form-control(id=name, type="number", name=name, value=value, min=min, max=max, disabled=readonly, style="text-align: right;")
    .invalid-feedback Bitte eine deutsche Zahl eingeben

mixin singleselect(name, label, value, values)
  .form-group
    +controlLabel(name, label)
    select.form-control.selectpicker(id=name, name=name)
      each val in values
        option(value=val, selected=value === val) #{val}

mixin singleselectRequired(name, label, value, values)
  .form-group
    +controlLabel(name, label)
    select.form-control.selectpicker(id=name, name=name, required)
      each val in values
        option(value=val, selected=value === val) #{val}

mixin multiselect(name, label, value, tags)
  .form-group
    +controlLabel(name, label)
    select.form-control.selectpicker(multiple, id=name, name=name, data-selected-text-format="count > 2")
      each tag in tags
        option(selected=value.indexOf(tag) > -1) #{tag}

mixin editableMultiselect(name, label, value, tags)
  .form-group
    +controlLabel(name, label)
    select.form-control.enhance(multiple, id=name, name=name, data-tags)
      each tag in tags
        option(selected=value.indexOf(tag) > -1) #{tag}

mixin currency(name, label, value, tooltip, placeholder, readonly)
  .form-group
    +controlLabel(name, label, tooltip)
    .input-group
      input.form-control.currency.text-right(
        id=name,
        type="number",
        step=0.01,
        value=formatNumberTwoDigitsEnglish(value),
        name=name,
        placeholder=placeholder,
        disabled=readonly
      )
      .input-group-append
        span.input-group-text.px-1: b €
      .invalid-feedback Bitte eine deutsche Zahl eingeben

mixin currencySpan(value, id, clazz)
  span.text-right(id=id, class=clazz) #{formatReadonlyAsEuro(value)}

mixin textareaPure(name, label, value, placeholder)
  +textareaInternal('form-control', '7', name, label, value, null, placeholder)

mixin textarea(name, label, value, tooltip, placeholder)
  +textareaInternal('md-textarea', '7', name, label, value, tooltip, placeholder)

mixin hightextarea(name, label, value, tooltip, placeholder)
  +textareaInternal('md-textarea', '30', name, label, value, tooltip, placeholder)

mixin checkbox(name, label, checked, optionalValue)
  .form-check.abc-checkbox.abc-checkbox-success.d-block(style="padding-top:.4rem")
    input.form-check-input(type="checkbox", id=name + (optionalValue || ''), name=name, value=optionalValue, checked=checked ? 'true' : undefined)
    label.form-check-label(for=name + (optionalValue || '')) !{label}

mixin submitButtons(text)
  .btn-group.float-right
    a.btn.btn-light(href="javascript:history.back()", type="cancel") Zurück
    if text
      button.btn.btn-primary(type="submit") #{text}
    else
      button.btn.btn-primary(type="submit") Speichern

mixin submitButton(veranstaltung, current, name, title, icon)
  if veranstaltung.url()
    a.btn(class=`btn-${name}${current === name ? ' active disabled' : ''}`, href=veranstaltung.fullyQualifiedUrl() + '/' + name, title=title): i.fas.fa-fw(
      class=icon
    )
  else
    a.btn.name.active.disabled(class="btn-' + + '", href='/' + name, title=title): i(class='fas fa-fw ' + icon)

mixin hidden(name, value)
  input(type="hidden", name=name, value=value)

mixin date(name, label, value, tooltip, startDate)
  .form-group
    +controlLabel(name, label, tooltip)
    input.form-control(
      id=name,
      type="text",
      name=name,
      value=value,
      data-provide="datepicker",
      data-date-format="dd.mm.yyyy",
      data-date-autoclose,
      data-date-week-start=1,
      data-date-view-ode="days",
      data-date-min-view-mode="days",
      data-date-language="de",
      data-date-orientation="bottom",
      data-date-start-date=startDate
    )

mixin time(name, value)
  .form-group
    label.control-label(for=name) &nbsp;
    input.form-control.timepicker(id=name, type="text", name=name, value=value)

mixin colorPicker(name, value)
  .form-group
    +controlLabel(name, 'Farbe')
    .input-group.c-picker
      span.input-group-addon: i
      input.form-control(id=name, type="text", name=name, value=value)

mixin twitter(name, label, value)
  .form-group
    +controlLabel(name, label)
    .input-group
      span.input-group-addon @
      input.form-control(id=name, type="text", name=name, value=value)

mixin csrf
  +hidden('_csrf', csrf_token)

mixin controlLabel(name, label, tooltip)
  label(for=name)
    if (tooltip)
      span.tooltiplabel(data-original-title=tooltip) #{label}:&nbsp;
        i.fas.fa-question-circle
    else
      if label
        | #{label}:

mixin textareaInternal(classname, rowCount, name, label, value, tooltip, placeholder)
  .form-group
    +controlLabel(name, label, tooltip)
    textarea(class=classname, id=name, rows=rowCount, type="text", name=name, placeholder=placeholder) #{value}

mixin reallyDeleteModalPost(header, options, extraclasses)
  +reallyDeleteModalOnly(header, options)
  +reallyDeleteButtonOnly(header, options, extraclasses)

mixin reallyDeleteModalOnly(header, options)
  - var theID = 'reallyDelete' + header.replace('.', '');
  .modal.fade(id=theID, tabindex="-1")
    .modal-dialog
      .modal-content
        .modal-header
          button.close(type="button", data-dismiss="modal", aria-hidden="true") &times;
          h3 #{header}
        .modal-body
          p Bist Du sicher?
          form(action=options.url, role="form", method="post")
            +csrf
            each val, param in options.params
              +hidden(param, val)
            .btn-group
              button.btn.btn-default(type="cancel", data-dismiss="modal", aria-hidden="true") Nein
              button.btn.btn-primary(type="submit")
                i.far.fa-trash-alt.fa-fw &nbsp;
                | Löschen

mixin reallyDeleteButtonOnly(header, options, extraclasses)
  - var theID = 'reallyDelete' + header.replace('.', '');
  span.btn.btn-danger(data-toggle="modal", data-target='#' + theID, class=extraclasses)
    i.far.fa-trash-alt.fa-fw
    if (extraclasses)
      | &nbsp; Löschen

mixin legendMitBody(id, title, optionalCurrencySpan, optionalColorClassSuffix, optionalMoney, collapsed)
  .card.mb-2(class='border-' + (optionalColorClassSuffix || 'allgemeines'))
    h5.card-header.p-2(class='color-' + (optionalColorClassSuffix || 'allgemeines'))
      a.inherit-color.chevron(data-toggle="collapse", data-target='#' + id): b
        if collapsed
          i.far.fa-caret-square-right.fa-fw
        else
          i.far.fa-caret-square-down.fa-fw
        | !{` ${title}`}
      if optionalCurrencySpan
        b: +currencySpan(optionalMoney, optionalCurrencySpan, 'float-right')
    .p-1.collapse(id=id, class=collapsed ? '' : ' show')
      block

mixin uploader(name, label, accept, value, extradata)
  - var istPressefoto = extradata.typ === 'pressefoto';
  - var prefix = istPressefoto ? '/upload/' : '/files/';
  - var files = value instanceof Array ? value : [value];
  - var previewFiles = value ? files.map(each => prefix + encodeURIComponent(each)) : [];
  - var previewConfig = files.map(each => { return { caption: each, key: encodeURIComponent(each) } });
  .form-group
    +controlLabel(name, label)
    input.file-loading(
      id=name,
      name="datei",
      type="file",
      accept=accept || '*',
      data-language="de",
      data-theme="fas",
      data-upload-url='/veranstaltungen/upload' + '?_csrf=' + encodeURIComponent(csrf_token),
      data-max-file-preview-size=10240,
      data-initial-preview-as-data="true",
      data-overwrite-initial="false",
      data-max-file-count=2,
      multiple,
      data-min-file-size=istPressefoto ? 250 : null,
      data-upload-async="true",
      data-upload-extra-data=extradata,
      data-delete-url='/veranstaltungen/deletefile' + '?_csrf=' + encodeURIComponent(csrf_token),
      data-delete-extra-data=extradata,
      data-initial-preview=previewFiles,
      data-initial-preview-config=previewConfig
    )
